name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.7', '3.8', '3.9', '3.10', '3.11']
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install -e ".[dev]"
    
    - name: Run tests
      run: |
        pytest tests/ --cov=src/transmogrify
    
    - name: Test output format methods
      run: |
        cat > test_output_formats.py << 'EOF'
        import sys
        from src.transmogrify import Processor

        # Sample data
        data = {
            'id': 123,
            'name': 'Test',
            'details': {'value': 456},
            'items': [{'id': 1}, {'id': 2}]
        }

        # Process data
        processor = Processor()
        result = processor.process(data)

        # Test all output methods
        tables = result.to_dict()
        json_obj = result.to_json_objects()
        json_bytes = result.to_json_bytes()
        csv_bytes = result.to_csv_bytes()

        # Print result types for verification
        print('to_dict type:', type(tables))
        print('to_json_objects type:', type(json_obj))
        print('to_json_bytes type:', type(json_bytes))
        print('to_csv_bytes type:', type(csv_bytes))

        # Check results
        if not isinstance(tables, dict) or not isinstance(json_bytes, dict):
            sys.exit(1)
        print('All output format methods working!')
        EOF
        python test_output_formats.py
    
    - name: Build docs
      run: |
        python -m pip install -e ".[docs]"
        cd docs && make html
    
    - name: Upload docs
      uses: actions/upload-artifact@v3
      if: matrix.python-version == '3.9'
      with:
        name: docs-html
        path: docs/_build/html/

  package:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install build wheel twine
    
    - name: Build package
      run: |
        python -m build
    
    - name: Test package
      run: |
        python -m twine check dist/*
    
    - name: Upload package artifacts
      uses: actions/upload-artifact@v3
      with:
        name: dist
        path: dist/ 